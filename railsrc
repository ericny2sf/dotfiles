#!/usr/bin/ruby
# 
# Resources
# http://ozmm.org/posts/railsrc.html
# http://rbjl.net/49-railsrc-rails-console-snippets

# Log to STDOUT if in Rails
if defined?(Rails) and !Rails.env.nil?
  if Rails.logger
    Rails.logger = Logger.new(STDOUT)
    ActiveRecord::Base.logger = Rails.logger
  end
end

# Show the date/time format strings defined and example output
# http://www.onrails.org/2008/08/20/what-are-all-the-rails-date-formats
def date_formats
  now = Time.now
  [:to_date, :to_datetime, :to_time].each do |conv_meth|
    obj = now.send(conv_meth)
    puts obj.class.name
    puts "=" * obj.class.name.length
    name_and_fmts = obj.class::DATE_FORMATS.map { |k, v| [k, %Q('#{String === v ? v : '&proc'}')] }
    max_name_size = name_and_fmts.map { |k, _| k.to_s.length }.max + 2
    max_fmt_size = name_and_fmts.map { |_, v| v.length }.max + 1
    name_and_fmts.each do |format_name, format_str|
      puts sprintf("%#{max_name_size}s:%-#{max_fmt_size}s %s", format_name, format_str, obj.to_s(format_name))
    end
    puts
  end
end

def show_routes(match = nil)
  Rails.application.reload_routes!
  all_routes = Rails.application.routes.routes
  
  require 'rails/application/route_inspector'
  inspector = Rails::Application::RouteInspector.new
  
  routes = inspector.format(all_routes, ENV['CONTROLLER'])
  
  ansi_bold = "\033[1m"
  ansi_reset = "\033[0m"
  
  if (match)
    match = match.to_s
    puts routes.grep(/#{match}/).map { |r|
      r.gsub!(match, "#{ansi_bold}#{match}#{ansi_reset}")
    }.join("\n")
  else
    puts routes.join "\n"
  end
end

# Print database schema for the provided Rails model
def show_schema(obj)
  y(obj.send("column_names"))
end

def sql(query)
  ActiveRecord::Base.connection.select_all(query)
end
